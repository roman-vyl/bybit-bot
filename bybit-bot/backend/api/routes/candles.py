# backend/api/routes/candles.py

from fastapi import APIRouter, Query
from backend.core.data.db_loader import get_candles_from_db
from fastapi.responses import JSONResponse
from typing import Optional, List
import traceback
from datetime import datetime


router = APIRouter()


@router.get("/candles")
def get_candles(
    symbol: str,
    timeframe: str,
    start: int,
    end: int,
):
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–≤–µ—á–∏
        candles = get_candles_from_db(symbol, timeframe, start, end)

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ–±—ä–µ–º–∞ –∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞–Ω–Ω—ã—Ö
        print(f"üì• /candles ‚Üí {symbol=}, {timeframe=}, {start=}, {end=}")
        print(
            f"üïì unix range ‚Üí {datetime.utcfromtimestamp(start)} ‚Üí {datetime.utcfromtimestamp(end)}"
        )
        print(f"üìä count: {len(candles)}")

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ —Å–≤–µ—á–µ–π
        return {"candles": candles}
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ get_candles endpoint:")
        traceback.print_exc()
        return JSONResponse(
            status_code=500, content={"error": f"Internal Server Error: {str(e)}"}
        )
