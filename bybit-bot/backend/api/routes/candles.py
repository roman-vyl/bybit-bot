# backend/api/routes/candles.py

from fastapi import APIRouter, Query
from backend.core.data.db_loader import (
    get_candles_from_db,
    get_candles_with_ema_from_db,
)
from fastapi.responses import JSONResponse
from typing import Optional, List
import traceback
from datetime import datetime


router = APIRouter()


@router.get("/candles")
def get_candles(
    symbol: str,
    timeframe: str,
    start: int,
    end: int,
    include_ema: bool = Query(False, description="–í–∫–ª—é—á–∏—Ç—å EMA –¥–∞–Ω–Ω—ã–µ"),
    ema_periods: str = Query("20,50,200", description="–ü–µ—Ä–∏–æ–¥—ã EMA —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é"),
):
    try:
        # –ü–∞—Ä—Å–∏–º –ø–µ—Ä–∏–æ–¥—ã EMA
        periods = (
            [p.strip() for p in ema_periods.split(",") if p.strip()]
            if include_ema
            else []
        )

        if include_ema and periods:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–≤–µ—á–∏ —Å EMA –¥–∞–Ω–Ω—ã–º–∏
            candles, ema_data = get_candles_with_ema_from_db(
                symbol, timeframe, start, end, include_ema=True, ema_periods=periods
            )
            ema_response = {timeframe: ema_data} if ema_data else {}
        else:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–≤–µ—á–∏
            candles = get_candles_from_db(symbol, timeframe, start, end)
            ema_response = {}

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ–±—ä–µ–º–∞ –∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞–Ω–Ω—ã—Ö
        print(
            f"üì• /candles ‚Üí {symbol=}, {timeframe=}, {start=}, {end=}, {include_ema=}"
        )
        print(
            f"üïì unix range ‚Üí {datetime.utcfromtimestamp(start)} ‚Üí {datetime.utcfromtimestamp(end)}"
        )
        print(f"üìä count: {len(candles)}")
        if include_ema:
            print(
                f"üìà EMA periods: {periods}, data keys: {list(ema_response.get(timeframe, {}).keys())}"
            )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –æ–∂–∏–¥–∞–µ–º—É—é —Ñ—Ä–æ–Ω—Ç–æ–º
        return {"candles": candles, "ema": ema_response}
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ get_candles endpoint:")
        traceback.print_exc()
        return JSONResponse(
            status_code=500, content={"error": f"Internal Server Error: {str(e)}"}
        )
