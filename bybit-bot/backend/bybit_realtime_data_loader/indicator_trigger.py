"""
indicator_trigger.py

–ú–æ–¥—É–ª—å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–∞—Å—á—ë—Ç–æ–≤ EMA –∏ RSI –ø–æ –Ω–æ–≤–æ–π –∑–∞–∫—Ä—ã—Ç–æ–π —Å–≤–µ—á–µ.
–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏ —Å–≤–µ—á–∏ –≤ –ë–î.
"""

import logging
from backend.core.indicators.calculate_ema_combined import run_ema_incremental
from backend.config.timeframes_config import TIMEFRAMES_CONFIG

logger = logging.getLogger(__name__)


class IndicatorTrigger:
    def __init__(self):
        pass

    def trigger(self, symbol: str, timeframe: str):
        """
        –ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á—ë—Ç EMA –∏ RSI –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Å–∏–º–≤–æ–ª—É –∏ —Ç–∞–π–º—Ñ—Ä–µ–π–º—É.
        :param symbol: –ù–∞–ø—Ä–∏–º–µ—Ä, "BTCUSDT"
        :param timeframe: –ù–∞–ø—Ä–∏–º–µ—Ä, "1m", "5m", "1h" ‚Äî –≤ —Ñ–æ—Ä–º–∞—Ç–µ TIMEFRAMES_CONFIG
        """
        if timeframe not in TIMEFRAMES_CONFIG:
            logger.warning(f"‚ùå –¢–∞–π–º—Ñ—Ä–µ–π–º '{timeframe}' –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.")
            return

        try:
            logger.info(f"üìä –†–∞—Å—á—ë—Ç EMA/RSI: {symbol} {timeframe}")
            run_ema_incremental(symbol=symbol, timeframe=timeframe)
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤: {e}")
