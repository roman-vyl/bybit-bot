"""
data_backfill.py

–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–æ 200 –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Å–≤–µ—á–µ–π –¥–ª—è BTCUSDT —Å Bybit (realnet)
–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü—ã: candles_1m, candles_5m, ..., candles_1w
"""

from pathlib import Path
import sys

BASE_DIR = Path(__file__).resolve().parents[2]  # .../backend
if str(BASE_DIR) not in sys.path:
    sys.path.append(str(BASE_DIR))

from config.timeframes_config import TIMEFRAMES_CONFIG

import sqlite3
from pybit.unified_trading import HTTP

# üìÅ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏
BASE_DIR = Path(__file__).resolve().parents[2]  # .../backend
if str(BASE_DIR) not in sys.path:
    sys.path.append(str(BASE_DIR))

PROJECT_ROOT = BASE_DIR.parent  # .../bybit-bot
DB_PATH = PROJECT_ROOT / "db" / "market_data.sqlite"

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
SYMBOL = "BTCUSDT"
INTERVAL_MAP = {
    "1m": "1",
    "5m": "5",
    "30m": "30",
    "1h": "60",
    "4h": "240",
    "6h": "360",
    "12h": "720",
    "1d": "D",
    "1w": "W",
}

# üü¢ –°—Ç–∞—Ä—Ç API-—Å–µ—Å—Å–∏–∏
session = HTTP(testnet=False)  # realnet
conn = sqlite3.connect(DB_PATH)
cursor = conn.cursor()

for tf in TIMEFRAMES_CONFIG.keys():
    if tf not in INTERVAL_MAP:
        print(f"‚ö†Ô∏è –¢–∞–π–º—Ñ—Ä–µ–π–º {tf} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ INTERVAL_MAP, –ø—Ä–æ–ø—É—â–µ–Ω")
        continue

    interval = INTERVAL_MAP[tf]
    print(f"üì• –ó–∞–≥—Ä—É–∑–∫–∞ {tf}...")
    try:
        response = session.get_kline(
            category="linear", symbol=SYMBOL, interval=interval, limit=200
        )
        candles = response["result"]["list"]
        table = f"candles_{tf}"

        for c in candles:
            ts = int(c[0]) // 1000
            ts_ns = int(c[0]) * 1_000_000
            open_, high, low, close, volume = map(float, c[1:6])
            cursor.execute(
                f"""
                INSERT OR IGNORE INTO {table}
                (symbol, timestamp, timestamp_ns, open, high, low, close, volume)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?)
            """,
                (SYMBOL, ts, ts_ns, open_, high, low, close, volume),
            )

        conn.commit()
        print(f"‚úÖ {len(candles)} —Å–≤–µ—á–µ–π –∑–∞–ø–∏—Å–∞–Ω–æ –≤ {table}")

    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {tf}: {e}")

conn.close()
print("üèÅ –ì–æ—Ç–æ–≤–æ.")
